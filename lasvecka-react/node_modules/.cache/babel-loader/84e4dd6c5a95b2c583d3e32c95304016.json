{"ast":null,"code":"// Returns the ISO week of the date.\nDate.prototype.getWeek = function () {\n  var date = new Date(this.getTime());\n  date.setHours(0, 0, 0, 0); // Thursday in current week decides the year.\n\n  date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7); // January 4 is always in week 1.\n\n  var week1 = new Date(date.getFullYear(), 0, 4); // Adjust to Thursday in week 1 and count number of weeks from date to week1.\n\n  return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\n};\n\nexport const currentWeek = () => {\n  var date = new Date();\n  return date.getWeek();\n};","map":{"version":3,"sources":["/home/flakt/Dokument/lasvecka/lasvecka-react/src/Components/Week.js"],"names":["Date","prototype","getWeek","date","getTime","setHours","setDate","getDate","getDay","week1","getFullYear","Math","round","currentWeek"],"mappings":"AAAA;AACAA,IAAI,CAACC,SAAL,CAAeC,OAAf,GAAyB,YAAW;AAClC,MAAIC,IAAI,GAAG,IAAIH,IAAJ,CAAS,KAAKI,OAAL,EAAT,CAAX;AACAD,EAAAA,IAAI,CAACE,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAFkC,CAGlC;;AACAF,EAAAA,IAAI,CAACG,OAAL,CAAaH,IAAI,CAACI,OAAL,KAAiB,CAAjB,GAAsB,CAACJ,IAAI,CAACK,MAAL,KAAgB,CAAjB,IAAsB,CAAzD,EAJkC,CAKlC;;AACA,MAAIC,KAAK,GAAG,IAAIT,IAAJ,CAASG,IAAI,CAACO,WAAL,EAAT,EAA6B,CAA7B,EAAgC,CAAhC,CAAZ,CANkC,CAOlC;;AACA,SACE,IACAC,IAAI,CAACC,KAAL,CACE,CAAC,CAACT,IAAI,CAACC,OAAL,KAAiBK,KAAK,CAACL,OAAN,EAAlB,IAAqC,QAArC,GACC,CADD,GAEE,CAACK,KAAK,CAACD,MAAN,KAAiB,CAAlB,IAAuB,CAF1B,IAGE,CAJJ,CAFF;AASD,CAjBD;;AAmBA,OAAO,MAAMK,WAAW,GAAG,MAAM;AAC/B,MAAIV,IAAI,GAAG,IAAIH,IAAJ,EAAX;AACA,SAAOG,IAAI,CAACD,OAAL,EAAP;AACD,CAHM","sourcesContent":["// Returns the ISO week of the date.\nDate.prototype.getWeek = function() {\n  var date = new Date(this.getTime());\n  date.setHours(0, 0, 0, 0);\n  // Thursday in current week decides the year.\n  date.setDate(date.getDate() + 3 - ((date.getDay() + 6) % 7));\n  // January 4 is always in week 1.\n  var week1 = new Date(date.getFullYear(), 0, 4);\n  // Adjust to Thursday in week 1 and count number of weeks from date to week1.\n  return (\n    1 +\n    Math.round(\n      ((date.getTime() - week1.getTime()) / 86400000 -\n        3 +\n        ((week1.getDay() + 6) % 7)) /\n        7\n    )\n  );\n};\n\nexport const currentWeek = () => {\n  var date = new Date();\n  return date.getWeek();\n};\n"]},"metadata":{},"sourceType":"module"}